// This file is auto-generated by @hey-api/openapi-ts

export type Activation = {
  uid: string;
  token: string;
};

export type Message = {
  message: string;
};

export type PaginatedUserList = {
  count: number;
  next?: string | null;
  previous?: string | null;
  results: Array<User>;
};

export type PasswordResetConfirm = {
  uid: string;
  token: string;
  new_password: string;
};

export type PatchedUser = {
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  username?: string;
  birthday?: string | null;
  readonly email?: string;
};

export type SendEmailReset = {
  email: string;
};

export type SetPassword = {
  new_password: string;
  current_password: string;
};

export type SetUsername = {
  current_password: string;
  new_email?: string;
};

export type TokenCreate = {
  password?: string;
  email?: string;
};

export type User = {
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  username: string;
  birthday?: string | null;
  readonly email: string;
};

export type UserCreate = {
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  username: string;
  birthday?: string | null;
  email?: string;
  password: string;
};

export type UsernameResetConfirm = {
  new_email?: string;
};

export type RestRestCheckRetrieveResponse = Message;

export type SchemaRetrieveData = {
  format?: "json" | "yaml";
  lang?:
    | "af"
    | "ar"
    | "ar-dz"
    | "ast"
    | "az"
    | "be"
    | "bg"
    | "bn"
    | "br"
    | "bs"
    | "ca"
    | "ckb"
    | "cs"
    | "cy"
    | "da"
    | "de"
    | "dsb"
    | "el"
    | "en"
    | "en-au"
    | "en-gb"
    | "eo"
    | "es"
    | "es-ar"
    | "es-co"
    | "es-mx"
    | "es-ni"
    | "es-ve"
    | "et"
    | "eu"
    | "fa"
    | "fi"
    | "fr"
    | "fy"
    | "ga"
    | "gd"
    | "gl"
    | "he"
    | "hi"
    | "hr"
    | "hsb"
    | "hu"
    | "hy"
    | "ia"
    | "id"
    | "ig"
    | "io"
    | "is"
    | "it"
    | "ja"
    | "ka"
    | "kab"
    | "kk"
    | "km"
    | "kn"
    | "ko"
    | "ky"
    | "lb"
    | "lt"
    | "lv"
    | "mk"
    | "ml"
    | "mn"
    | "mr"
    | "ms"
    | "my"
    | "nb"
    | "ne"
    | "nl"
    | "nn"
    | "os"
    | "pa"
    | "pl"
    | "pt"
    | "pt-br"
    | "ro"
    | "ru"
    | "sk"
    | "sl"
    | "sq"
    | "sr"
    | "sr-latn"
    | "sv"
    | "sw"
    | "ta"
    | "te"
    | "tg"
    | "th"
    | "tk"
    | "tr"
    | "tt"
    | "udm"
    | "ug"
    | "uk"
    | "ur"
    | "uz"
    | "vi"
    | "zh-hans"
    | "zh-hant";
};

export type SchemaRetrieveResponse = {
  [key: string]: unknown;
};

export type V1TokenLoginCreateData = {
  requestBody?: TokenCreate;
};

export type V1TokenLoginCreateResponse = TokenCreate;

export type V1TokenLogoutCreateResponse = unknown;

export type V1UsersListData = {
  /**
   * Number of results to return per page.
   */
  limit?: number;
  /**
   * The initial index from which to return the results.
   */
  offset?: number;
};

export type V1UsersListResponse = PaginatedUserList;

export type V1UsersCreateData = {
  requestBody: UserCreate;
};

export type V1UsersCreateResponse = UserCreate;

export type V1UsersRetrieveData = {
  username: string;
};

export type V1UsersRetrieveResponse = User;

export type V1UsersUpdateData = {
  requestBody: User;
  username: string;
};

export type V1UsersUpdateResponse = User;

export type V1UsersPartialUpdateData = {
  requestBody?: PatchedUser;
  username: string;
};

export type V1UsersPartialUpdateResponse = User;

export type V1UsersDestroyData = {
  username: string;
};

export type V1UsersDestroyResponse = void;

export type V1UsersActivationCreateData = {
  requestBody: Activation;
};

export type V1UsersActivationCreateResponse = Activation;

export type V1UsersMeRetrieveResponse = User;

export type V1UsersMeUpdateData = {
  requestBody: User;
};

export type V1UsersMeUpdateResponse = User;

export type V1UsersMePartialUpdateData = {
  requestBody?: PatchedUser;
};

export type V1UsersMePartialUpdateResponse = User;

export type V1UsersMeDestroyResponse = void;

export type V1UsersResendActivationCreateData = {
  requestBody: SendEmailReset;
};

export type V1UsersResendActivationCreateResponse = SendEmailReset;

export type V1UsersResetEmailCreateData = {
  requestBody: SendEmailReset;
};

export type V1UsersResetEmailCreateResponse = SendEmailReset;

export type V1UsersResetEmailConfirmCreateData = {
  requestBody?: UsernameResetConfirm;
};

export type V1UsersResetEmailConfirmCreateResponse = UsernameResetConfirm;

export type V1UsersResetPasswordCreateData = {
  requestBody: SendEmailReset;
};

export type V1UsersResetPasswordCreateResponse = SendEmailReset;

export type V1UsersResetPasswordConfirmCreateData = {
  requestBody: PasswordResetConfirm;
};

export type V1UsersResetPasswordConfirmCreateResponse = PasswordResetConfirm;

export type V1UsersSetEmailCreateData = {
  requestBody: SetUsername;
};

export type V1UsersSetEmailCreateResponse = SetUsername;

export type V1UsersSetPasswordCreateData = {
  requestBody: SetPassword;
};

export type V1UsersSetPasswordCreateResponse = SetPassword;

export type $OpenApiTs = {
  "/api/rest/rest-check/": {
    get: {
      res: {
        200: Message;
      };
    };
  };
  "/api/schema/": {
    get: {
      req: SchemaRetrieveData;
      res: {
        200: {
          [key: string]: unknown;
        };
      };
    };
  };
  "/api/v1/token/login/": {
    post: {
      req: V1TokenLoginCreateData;
      res: {
        200: TokenCreate;
      };
    };
  };
  "/api/v1/token/logout/": {
    post: {
      res: {
        /**
         * No response body
         */
        200: unknown;
      };
    };
  };
  "/api/v1/users/": {
    get: {
      req: V1UsersListData;
      res: {
        200: PaginatedUserList;
      };
    };
    post: {
      req: V1UsersCreateData;
      res: {
        201: UserCreate;
      };
    };
  };
  "/api/v1/users/{username}/": {
    get: {
      req: V1UsersRetrieveData;
      res: {
        200: User;
      };
    };
    put: {
      req: V1UsersUpdateData;
      res: {
        200: User;
      };
    };
    patch: {
      req: V1UsersPartialUpdateData;
      res: {
        200: User;
      };
    };
    delete: {
      req: V1UsersDestroyData;
      res: {
        /**
         * No response body
         */
        204: void;
      };
    };
  };
  "/api/v1/users/activation/": {
    post: {
      req: V1UsersActivationCreateData;
      res: {
        200: Activation;
      };
    };
  };
  "/api/v1/users/me/": {
    get: {
      res: {
        200: User;
      };
    };
    put: {
      req: V1UsersMeUpdateData;
      res: {
        200: User;
      };
    };
    patch: {
      req: V1UsersMePartialUpdateData;
      res: {
        200: User;
      };
    };
    delete: {
      res: {
        /**
         * No response body
         */
        204: void;
      };
    };
  };
  "/api/v1/users/resend_activation/": {
    post: {
      req: V1UsersResendActivationCreateData;
      res: {
        200: SendEmailReset;
      };
    };
  };
  "/api/v1/users/reset_email/": {
    post: {
      req: V1UsersResetEmailCreateData;
      res: {
        200: SendEmailReset;
      };
    };
  };
  "/api/v1/users/reset_email_confirm/": {
    post: {
      req: V1UsersResetEmailConfirmCreateData;
      res: {
        200: UsernameResetConfirm;
      };
    };
  };
  "/api/v1/users/reset_password/": {
    post: {
      req: V1UsersResetPasswordCreateData;
      res: {
        200: SendEmailReset;
      };
    };
  };
  "/api/v1/users/reset_password_confirm/": {
    post: {
      req: V1UsersResetPasswordConfirmCreateData;
      res: {
        200: PasswordResetConfirm;
      };
    };
  };
  "/api/v1/users/set_email/": {
    post: {
      req: V1UsersSetEmailCreateData;
      res: {
        200: SetUsername;
      };
    };
  };
  "/api/v1/users/set_password/": {
    post: {
      req: V1UsersSetPasswordCreateData;
      res: {
        200: SetPassword;
      };
    };
  };
};
