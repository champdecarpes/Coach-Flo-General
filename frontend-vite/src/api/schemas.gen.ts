// This file is auto-generated by @hey-api/openapi-ts

export const $Activation = {
  type: "object",
  properties: {
    uid: {
      type: "string",
    },
    token: {
      type: "string",
    },
  },
  required: ["token", "uid"],
} as const;

export const $Message = {
  type: "object",
  properties: {
    message: {
      type: "string",
    },
  },
  required: ["message"],
} as const;

export const $PaginatedUserList = {
  type: "object",
  required: ["count", "results"],
  properties: {
    count: {
      type: "integer",
      example: 123,
    },
    next: {
      type: "string",
      nullable: true,
      format: "uri",
      example: "http://api.example.org/accounts/?offset=400&limit=100",
    },
    previous: {
      type: "string",
      nullable: true,
      format: "uri",
      example: "http://api.example.org/accounts/?offset=200&limit=100",
    },
    results: {
      type: "array",
      items: {
        $ref: "#/components/schemas/User",
      },
    },
  },
} as const;

export const $PasswordResetConfirm = {
  type: "object",
  properties: {
    uid: {
      type: "string",
    },
    token: {
      type: "string",
    },
    new_password: {
      type: "string",
    },
  },
  required: ["new_password", "token", "uid"],
} as const;

export const $PatchedUser = {
  type: "object",
  properties: {
    username: {
      type: "string",
      description:
        "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
      pattern: "^[\\w.@+-]+$",
      maxLength: 150,
    },
    birthday: {
      type: "string",
      format: "date",
      nullable: true,
    },
    email: {
      type: "string",
      format: "email",
      readOnly: true,
    },
  },
} as const;

export const $SendEmailReset = {
  type: "object",
  properties: {
    email: {
      type: "string",
      format: "email",
    },
  },
  required: ["email"],
} as const;

export const $SetPassword = {
  type: "object",
  properties: {
    new_password: {
      type: "string",
    },
    current_password: {
      type: "string",
    },
  },
  required: ["current_password", "new_password"],
} as const;

export const $SetUsername = {
  type: "object",
  properties: {
    current_password: {
      type: "string",
    },
    new_email: {
      type: "string",
      format: "email",
      title: "Email",
      maxLength: 254,
    },
  },
  required: ["current_password"],
} as const;

export const $TokenCreate = {
  type: "object",
  properties: {
    password: {
      type: "string",
    },
    email: {
      type: "string",
    },
  },
} as const;

export const $User = {
  type: "object",
  properties: {
    username: {
      type: "string",
      description:
        "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
      pattern: "^[\\w.@+-]+$",
      maxLength: 150,
    },
    birthday: {
      type: "string",
      format: "date",
      nullable: true,
    },
    email: {
      type: "string",
      format: "email",
      readOnly: true,
    },
  },
  required: ["email", "username"],
} as const;

export const $UserCreate = {
  type: "object",
  properties: {
    username: {
      type: "string",
      description:
        "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
      pattern: "^[\\w.@+-]+$",
      maxLength: 150,
    },
    birthday: {
      type: "string",
      format: "date",
      nullable: true,
    },
    email: {
      type: "string",
      format: "email",
      maxLength: 254,
    },
    password: {
      type: "string",
      writeOnly: true,
    },
  },
  required: ["password", "username"],
} as const;

export const $UsernameResetConfirm = {
  type: "object",
  properties: {
    new_email: {
      type: "string",
      format: "email",
      title: "Email",
      maxLength: 254,
    },
  },
} as const;
